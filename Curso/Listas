#Array 
# Array é uma coleção de itens. É uma estrutura de dados que pode armazenar um número fixo de elementos do mesmo tipo. Os elementos de um array são acessados por um índice. O índice começa com 0. Em Python, os arrays são representados por listas.
#array = []
#array = list()

array_int = [1, 2, 3, 4, 5]
array_float = [1.0, 2.0, 3.0, 4.0, 5.0] 
array_str = ['a', 'b', 'c', 'd', 'e']
array_misto = [1, 2.0, 'c', 4, 5.0]
print(array_int)
print(array_float)
print(array_str)
print(array_misto)
print("-"*20)

array = list([1, 2, 3, 4, 5])
print(array)
primeiro_elemento = array[0]
ultimo_elemento = array[-1]
print(primeiro_elemento)
print(ultimo_elemento)
array[0] = 10
print(array)
print("-"*20)

array = [1, "Texto", 3]
print(array[1:3])
print("-"*20)

array = [10, 2, 3]
print(array)
array.append(4) #Adiciona um elemento ao final do array
print(array)
array.insert(1, 1) #Adiciona um elemento na posição 1
print(array)
array.remove(10) #Remove o elemento 10
print(array)
print("-"*20)

array = [10, 2, 3, 20, "3"]
array.remove(10)
print(array)
array.pop(2)
print(array)
array.pop(2)
array.insert(0, 1) 
array.append(4) 
print(array)
print("-"*20)

array = [10, 2, 3, 20, "3"]
print(len(array))
array.clear() #Limpa o array
print(array)
print(len(array))
print("-"*20)

array = [1, 'teste', 1.3, True]
print(1 in array)
print(False not in array)
print("-"*20)

lista = [5, 6, 7, 2, 3, 4, 7]
teste = lista.count(7)
print(teste)
print("-"*20)

lista = [5, 6, 7, 2, 3, 4, 7]
pos = lista.index(5)
print(pos) #Retorna a posição do elemento
pos = lista.index(7)
print(pos)
print("-"*20)

array1 = [1, 2, 3]
array2 = [4, 5, 6]
soma = array1 + array2
print(soma)
print("-"*20)

array = [1, 2, 3]
mult = array * 3
print(mult)
print("-"*20)

números = ["um", "dois", "três", "quatro", "cinco"]
x, y, z, a, b = números
print(x)
print(y)
print(z)
print(a)
print(b)
print("-"*20)

números = ["um", "dois", "três", "quatro", "cinco"]
x, y, _, a, _ = números
print(x)
print(y)
print(a)
print("-"*20)

cores = ["vermelho", "verde", "azul"] #Mais comum de se usar
for cor in cores:
    print(cor)
print("-"*20)

cores = ["vermelho", "verde", "azul"] 
for i in range(len(cores)):
    print(cores[i])
print("-"*20)

cores = ["vermelho", "verde", "azul"] #Menos comum de se usar
índice = 0
while índice < len(cores):
    print(cores[índice])
    índice += 1
print("-"*20)

lista = [[1, 2, 3] , [4, 5, 6]]
primeira_lista = lista[0]
segunda_lista = lista[1]
print(primeira_lista)
print(segunda_lista)
primeiro_elemento_primeira_lista = lista[1][2]
print(primeiro_elemento_primeira_lista)
print("-"*20)

#SET
# Set é uma coleção de itens desordenada e não indexada. Em Python, os conjuntos são escritos com chaves.

lista_set = {}
lista2_set = {1, 2, 3}
lista3_set = set({1, 2, 3})
print(lista_set)
print(lista2_set)
print(lista3_set)
print("-"*20)

# lista2_set = {1, 2, 3}
# lista2_set[0] = 2 #Erro pois set não é indexado

lista2_set = {1, 2, 3}
lista2_set.add(4) #Adiciona um elemento ao set
print(lista2_set)
lista2_set.remove(1) #Remove um elemento do set
print(lista2_set)
print("-"*20)

lista2_set = {1, 2, 3, 4, 2} #Não aceita elementos repetidos
print(lista2_set)
print("-"*20)

lista2_set = {1, 2, 3, 4}
lista2_set.clear() #Limpa o set
print(lista2_set)
print("-"*20)

lista2_set = {1, 2, 3, 4}
print(len(lista2_set)) #Retorna o tamanho do set
print("-"*20)

lista2_set = {1, 2, 3, 4}
print(1 in lista2_set) #Verifica se o elemento está no set
print('-'*20)

lista2_set = {1, 2, 3, '4', True, 6.1}
for x in lista2_set:    #Percorre o set
    print(x)
print('-'*20)

set1 = {1, 2, 3}
set2 = {3, 4, 5, 6}
set_unido = set1.union(set2) #Une os dois sets
print(set_unido)
print('-'*20)

set1 = {1, 2, 3}
set2 = {1, 2, 3, 4}
set_inser = set1.intersection(set2) #Retorna um set com os elementos que estão em ambos os sets
print(set_inser)
print('-'*20)

set1 = {1, 2, 3}
set2 = {1, 2, 3, 4}
set_dif = set2.difference(set1) #Retorna um set com os elementos que estão no set2 mas não estão no set1
print(set_dif)
print('-'*20)

#Tuple
# Tuple é uma coleção de itens ordenada e imutável. Em Python, as tuplas são escritas com parênteses.
# tuple = ()
# tuple = tuple()

doces = tuple(('bolo', 'brigadeiro', 'pudim'))
print(doces)
print('-'*20)

doces = ('bolo', 'brigadeiro', 'pudim')
print(doces)
print('-'*20)

nums = ('1', '2', '3')
print(len(nums))
print('-'*20)

nums = ('1', '2', '3')
print(nums[2])
print('-'*20)

nums = (1, 2, 3, 4, 5, 6, 7, 8)
sub_tupla = nums[2:4]
print(sub_tupla)
print('-'*20)

nums = (1, 2, 3, 4, 5, 6, 7, 8)
print(9 in nums)
print('-'*20)

# tupla = tuple((10, 20, 30))
# tupla[0] = 40 #Erro pois tupla é imutável
# print(tupla)
# print('-'*20)

tupla = (6, 7, 8, 9, 10, 6, 6)
print(tupla.count(6)) #Conta quantas vezes o elemento aparece na tupla
print('-'*20)

tupla = (5, '3', True, 7234)
pos = tupla.index('3')  #Retorna a posição do elemento
print(pos)
print('-'*20)

tupla = (5, '3', True, 7234) #Mais comum de se usar
for x in tupla: #Percorre a tupla
    print(x)
print('-'*20)

tupla = (5, '3', True, 7234)
for i in range(len(tupla)): #Percorre a tupla
    print(tupla[i])
print('-'*20)

tupla = (5, '3', True, 7234) #Menos comum de se usar
índice = 0
while índice < len(tupla): #Percorre a tupla
    print(tupla[índice])
    índice += 1
print('-'*20)

números_set = (1, 2, 3)
números_lista = list(números_set) #Converte a tupla em lista
números_lista[0] = 12 #Altera o elemento da posição 0
números_lista.append('Fim') #Adiciona um elemento ao final da lista
números_set = tuple(números_lista) #Converte a lista em tupla
print(números_set) 
print('-'*20)

#Dictionary
# Dictionary é uma coleção de itens desordenada, mutável e indexada. Em Python, os dicionários são escritos com chaves e possuem chaves e valores.
# dictionary = {}
# dictionary = dict()

idades = {'Ana':10, 'Maria':20, 'João':30, 'David':37}
print(idades)
print('-'*20)

nome_números = {7.1: "sete virgula um", 9.8: "nove virgula oito", 10.43: "dez virgula quarenta e três"}
print(nome_números)
print('-'*20)

idades = {'Aurora': 5, 'Yasmin':10, 'Paula':35, 'David':37}
print(idades['Paula']) #Retorna o valor da chave 'Paula'
print(idades['David']) #Retorna o valor da chave 'David'

idades.get('Yasmin') #Retorna o valor da chave 'David'
print('-'*20)

nome_números = {
    7.1: "sete virgula um", 
    9.8: "nove virgula oito", 
    10.43: "dez virgula quarenta e três"}
print(nome_números[7.1]) #Retorna o valor da chave 7.1
print(nome_números.get(9.8)) #Retorna o valor da chave 9.8
print('-'*20)

idades = {'Aurora': 5, 'Yasmin':10, 'Paula':35, 'David':37}
print("Aurora" in idades) #Verifica se a chave 'Aurora' está no dicionário
print("Fernando" not in idades) #Verifica se a chave 'David' não está no dicionário
print('-'*20)

idades = {'Aurora': 5, 'Yasmin':10, 'Paula':35, 'David':37}
idades['Aurora'] = 6 #Altera o valor da chave 'Aurora'
idades.update({'Yasmin': 11}) #Altera o valor da chave 'Yasmin'
print(idades)
print('-'*20)

idades = {'Aurora': 5, 'Yasmin':10, 'Paula':35, 'David':37}
idades['Fernando'] = 40 #Adiciona a chave 'Fernando' com o valor 40
print(idades)
idades.pop('Fernando') #Remove a chave 'Fernando'
print(idades)
idades['Fernando'] = 40 #Adiciona a chave 'Fernando' com o valor 40
print(idades)
idades.popitem() #Remove a última chave
print(idades, end='\n\n')

idades = {'Aurora': 5, 'Yasmin':10, 'Paula':35, 'David':37}
lista = idades.items() #Retorna uma lista com tuplas contendo chave e valor
print(lista, end='\n\n')
for item in lista:
    print(item[0], item[1])
print('-'*20)

idades = {'Aurora': 5, 'Yasmin':10, 'Paula':35, 'David':37}
chaves = idades.keys() #Retorna uma lista com as chaves
valores = idades.values() #Retorna uma lista com os valores
for item in chaves:
    print(item)
print('-'*20)
for item in valores:
    print(item)
print('-'*20)

idades = {'Aurora': 10, 'Yasmin':10, 'Paula':35, 'David':37}
lista_nomes = list(idades.values()) #Converte os valores em lista
pessoas_com_10_anos = lista_nomes.count(10) #Conta quantas vezes o valor 10 aparece na lista
print(pessoas_com_10_anos)
print('-'*20)

idades = {'Aurora': 5, 'Yasmin':10, 'Paula':35, 'David':37}
idades.clear() #Limpa o dicionário
print(idades)
print('-'*20)

dados_Aurora = {'idade': 5, 'peso': 15, 'altura': 1.10}
dados_Yasmin = {'idade': 10, 'peso': 20, 'altura': 1.30}
dados_Paula = {'idade': 35, 'peso': 50, 'altura': 1.60}
dados_David = {'idade': 37, 'peso': 70, 'altura': 1.80}
pessoas = {'Aurora': dados_Aurora, 'Yasmin': dados_Yasmin, 'Paula': dados_Paula, 'David': dados_David}
print (pessoas)
print('-'*20)

#Comprehension List 
# Comprehension List é uma forma concisa de criar listas. É uma maneira de criar listas aplicando uma expressão a cada item de um iterável.
# [expressão for item in iterável]
# [expressão for item in iterável if condição]

lista = [x for x in range(0, 10)] #Cria uma lista com os números de 0 a 9
print(lista)
print('-'*20)

lista = ['1', 'zero', 'quatro'] # Cria uma lista com os elementos '1', 'zero' e 'quatro'
lista = [x for x in lista] 
print(lista)
print('-'*20)

lista = [x for x in range(1,11) if x % 2 == 0] #Cria uma lista com os números pares de 1 a 10 e verifica se o número é par
print(lista)
print('-'*20)

lista_aux = [1, 5, 9]
lista = [x for x in range(1, 11) if x not in lista_aux] #Cria uma lista com os números de 1 a 10 que não estão na lista_aux
print(lista)
print('-'*20)

lista = [x for x in range(-10,20) if x <= 10 if x >=0] #Cria uma lista com os números de 0 a 9 que são maiores ou iguais a 0
print(lista)
print('-'*20)

lista = [x*2 for x in range(0,11)] #Cria uma lista com os números de 0 a 10 multiplicados por 2
print(lista)
print('-'*20)

lista = [str(x) for x in range(0,21)] #Cria uma lista com os números de 0 a 20 convertidos em string 
print(lista)
print('-'*20)

lista = [str(x)[0] for x in range(0,21)] #Cria uma lista com os primeiros dígitos dos números de 0 a 20 convertidos em string 
print(lista)
print('-'*20)

lista = ['negativo' if x < 0 else 'positivo' for x in range(-3, 4)] #Cria uma lista com os números de -3 a 3 e verifica se o número é negativo ou positivo
print(lista)
print('-'*20)

lista = [str(x) + ' par' if x % 2 == 0 else str(x) + ' impar' for x in range(2,11)] #Cria uma lista com os números de 2 a 10 e verifica se o número é par ou ímpar
print(lista)
print('-'*20)

lista = [1, 2, 3, 4, 5, 6, 7, 8, 9]
lista = list(filter(lambda x: x % 2 == 0, lista)) #Filtra os números pares da lista e converte em lista 
print(lista)
print('-'*20)

lista = [[x for x in range(1, 5)] for y in range(1, 5)] #Cria uma lista com os números de 1 a 4 e multiplica por 2
print(lista)
print('-'*20)

lista = [[str(x) + str(y) for x in range(1, 5)] for y in range(1, 5)]  # Cria uma lista com 
print(lista)
print('-'*20)

lista = [[str(x) + '*' + str(y) + '=' + str(x*y) for x in range(1, 11)] for y in range(1, 11)] #Cria uma lista com a tabuada de 1 a 10
print(lista)
print('-'*20)

#Atividades

1
tupla = (1, 10, 6, 7, 8, 10)
soma = 0
for i in tupla:
    soma += i
print(" Soma é: ", soma)
print('-'*20)

2
lista = []
for i in range(1, 101):
    lista.append(i)
print(lista)
print('-'*20)

3
lista = [30, 4, 43, 52, 65, -10]
lista2 = [43, 2, 4, 76, 32, 65, 3]
lista_unida = list(set(lista + lista2)) # Une as duas listas e remove os elementos repetidos
print(lista_unida)
print('-'*20)

4
# lista = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']
# mes = int(input('Digite o mês do seu nascimento: '))
# print("Você nasceu em %s " % lista[(mes)-1])
# print('-'*20)

# 5
# lista = []
# for i in range(1, 32):
#     lista.append(i)
# dia = int(input('Digite um número entre 1 e 31 referente ao dia do mês em que você nasceu: '))
# lista.remove(dia)
# print(lista)
# print('-'*20)

#Continuação das Atividades
6
# objetos = {
#     'cadeira': 'Serve para sentarmos', 
#     'mesa': 'Serve para comermos', 
#     'sofá': 'Serve para assistirmos TV'
#     }
# objeto_procurado = input('Digite o objeto que deseja saber a função: ')
# if objeto_procurado in objetos:
#     print(objetos[objeto_procurado])
# else:
#     print('Objeto não encontrado')
# print('-'*20)

7
lista = [x for x in range(-30, -19)] #Cria uma lista com os números de -30 a -20
print(lista)
print('-'*20)

8
lista = [x for x in range(4, 101) if x % 4 == 0] #Cria uma lista com os números de 4 a 100 e verifica se o número é divisível por 4
print(lista)
print('-'*20)

9
lista = [x for x in range(0,101) if str(x)[-1] =='0'] #Cria uma lista com os números de 0 a 100 e verifica se o último dígito é 0
print(lista)
print('-'*20)

10
lista = [ '0' if str(x)[-1] == '0' else '-' for x in range(0,21)] #Cria uma lista com os números de 0 a 20 e verifica se o último dígito é 0 e se não for, adiciona '-' e se for, adiciona '0'.
print(lista)
print('-'*20)
